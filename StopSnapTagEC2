## Stop infected instance, snapshot, and TAG
import boto3
import json

def lambda_handler(event, context):
    try:
        # Use this block if getting the instance ID from the event
        # Loop through each event item in the list
        # for event_item in event:
        #     # Extract the instance ID from the event_item
        #     instance_id = event_item.get('instance_id')  # Use get() to avoid KeyError

        # Hard-coded instance ID (for demo)
        instance_id = 'i-06246d0e7dce0f097'

        # Create an EC2 client
        ec2 = boto3.client('ec2')

        # Stop the specified EC2 instance
        ec2.stop_instances(InstanceIds=[instance_id])


        # Get the list of volumes attached to the instance
        volumes = ec2.describe_volumes(Filters=[{'Name': 'attachment.instance-id', 'Values': [instance_id]}])['Volumes']

        # Create a snapshot of each volume
        ebs = boto3.client('ec2')
        snapshot_ids = []

        for volume in volumes:
            snapshot = ebs.create_snapshot(VolumeId=volume['VolumeId'], Description=f'Snapshot of volume {volume["VolumeId"]}')
            snapshot_ids.append(snapshot['SnapshotId'])

        # Tag the instance with 'status:infected' (if needed)
        ec2.create_tags(Resources=[instance_id], Tags=[{'Key': 'status', 'Value': 'infected'}])

        return f"Stopped EC2 instance {instance_id} and created snapshots: {', '.join(snapshot_ids)}, and tagged with 'status:infected'"
    except Exception as e:
        return f"An error occurred: {str(e)}"
