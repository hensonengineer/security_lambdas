## Stop infected instance, snapshot, and TAG

import boto3

def lambda_handler(event, context):
    try:
        # Extract the instance ID from the event
        instance_id = event['instance_id']
        
        # Create an EC2 client
        ec2 = boto3.client('ec2')
        
        # Stop the specified EC2 instance
        ec2.stop_instances(InstanceIds=[instance_id])
        
        # Wait for the instance to stop (optional)
        ec2.get_waiter('instance_stopped').wait(InstanceIds=[instance_id])
        
        # Create a snapshot of the associated EBS volume
        response = ec2.describe_instances(InstanceIds=[instance_id])
        for reservation in response['Reservations']:
            for instance in reservation['Instances']:
                for block_device in instance['BlockDeviceMappings']:
                    ebs_volume_id = block_device['Ebs']['VolumeId']
                    snapshot = ec2.create_snapshot(VolumeId=ebs_volume_id)
        
        # Tag the instance with 'status:infected'
        ec2.create_tags(Resources=[instance_id], Tags=[{'Key': 'status', 'Value': 'infected'}])
        
        return f"Stopped EC2 instance {instance_id}, created snapshot {snapshot['SnapshotId']}, and tagged with 'status:infected'"
    except Exception as e:
        return f"An error occurred: {str(e)}"
